{
    "layout_dets": [
        {
            "category_type": "plain_text",
            "poly": [
                545,
                520,
                2000,
                520,
                2000,
                915,
                545,
                915
            ],
            "ignore": false,
            "order": 1,
            "anno_id": 1,
            "text": " finite automata [\\[7\\]](#page-7-1), [\\[14\\]](#page-7-1). One of the most famous longstanding open problems in automata theory, known as Černý Conjecture, states that for a given synchronizing DFA with  $n$  states one can always find a synchronizing word of length at most  $(n-1)^2$ . This conjecture was proven for numerous classes of automata, but the problem is still not solved in general case. The concept of synchronization has been also considered in coding theory [\\[3\\]](#page-7-1), [\\[8\\]](#page-7-1), parts orienting in manufacturing [\\[5\\]](#page-7-1), [\\[15\\]](#page-7-1), testing of reactive systems [\\[19\\]](#page-7-1) and Markov Decision Processes [\\[11\\]](#page-7-1), [\\[12\\]](#page-7-1).",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        545,
                        520,
                        2000,
                        520,
                        2000,
                        915,
                        545,
                        915
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                550,
                922.5,
                1997.5,
                922.5,
                1997.5,
                1417.5,
                550,
                1417.5
            ],
            "ignore": false,
            "order": 2,
            "anno_id": 1,
            "text": " Allowing no outgoing transitions from some states for certain letters helps us to model a system for which certain actions cannot be accomplished while being in a specified state. This leads to the problem of finding a synchronizing word for a finite automaton, where transition function is not defined for all states. Notice that this is the most frequent case, if we use automata to model real-world systems. In practice, it rarely happens that a real system can be modeled with a DFA where transition function is total. The transition function is usually a partial one. This fact motivated many researchers to investigate the properties of partial finite automata relevant to practical problems of synchronization.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        550,
                        922.5,
                        1997.5,
                        922.5,
                        1997.5,
                        1417.5,
                        550,
                        1417.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                555,
                1425,
                2000,
                1425,
                2000,
                1562.5,
                555,
                1562.5
            ],
            "ignore": false,
            "order": 3,
            "anno_id": 1,
            "text": " We know that, in general case, checking if a partial automaton can be synchronized is PSPACE-complete [13] even for binary alphabet [26] and those facts are essential in our latter considerations.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        555,
                        1425,
                        2000,
                        1425,
                        2000,
                        1562.5,
                        555,
                        1562.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                552.5,
                1569.9999999999998,
                1997.5,
                1569.9999999999998,
                1997.5,
                1859.9999999999998,
                552.5,
                1859.9999999999998
            ],
            "ignore": false,
            "order": 4,
            "anno_id": 1,
            "text": " In this paper we present a public key cryptosystem utilizing fact, that checking if the PFA is carefully synchronizing is PSPACE-complete. This is however not the first attempt of trying to develop asymmetric cryptosystems with the notion of finite automata. Public key cryptography on finite automata with output is discussed in  $[21]$  and uses the notion of invertible automata to provide the hard computational problem, inevitable to design such cryptosystem.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        552.5,
                        1569.9999999999998,
                        1997.5,
                        1569.9999999999998,
                        1997.5,
                        1859.9999999999998,
                        552.5,
                        1859.9999999999998
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                552.5,
                1872.5,
                2002.5,
                1872.5,
                2002.5,
                2162.5,
                552.5,
                2162.5
            ],
            "ignore": false,
            "order": 5,
            "anno_id": 1,
            "text": " The paper is organized as follows. In the section  $2$  we provide with the basic notions and facts about synchronization of automata. In the sections  $3$  and  $4$ we present basic method of encryption and decryption using our cryptosystem. In the section  $5$  we state couple of additional improvements to ensure better security. Finally we conclude the paper in the section 6 along with possible further research to the topic.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        552.5,
                        1872.5,
                        2002.5,
                        1872.5,
                        2002.5,
                        2162.5,
                        552.5,
                        2162.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                552.5,
                2345,
                1997.5,
                2345,
                1997.5,
                2800,
                552.5,
                2800
            ],
            "ignore": false,
            "order": 7,
            "anno_id": 1,
            "text": " Partial finite automaton (PFA) is an ordered tuple  $A = (Q, \\Sigma, \\delta)$ , where  $\\Sigma$  is a finite set of letters, Q is a finite set of states and  $\\delta: Q \\times \\Sigma^* \\to Q$  is a transition function, possibly not everywhere defined. In this definition we omit initial and final states, since they are not relevant to the problem of synchronization. For  $w \\in \\Sigma^*$  and  $q \\in Q$  we define  $\\delta(q, w)$  inductively:  $\\delta(q, \\epsilon) = q$  and  $\\delta(q, aw) = \\delta(\\delta(q, a), w)$  for  $a \\in \\Sigma$ , where  $\\epsilon$  is the empty word and  $\\delta(q, a)$  is defined. A word  $w \\in \\Sigma^*$  is called *carefully synchronizing* if there exists  $\\overline{q} \\in Q$  such that for every  $q \\in Q$ ,  $\\delta(q, w) = \\overline{q}$  and all transitions  $\\delta(q, w')$ , where w' is any prefix of  $w$ , are defined. A PFA is called *carefully synchronizing* ",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        552.5,
                        2345,
                        1997.5,
                        2345,
                        1997.5,
                        2800,
                        552.5,
                        2800
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "footer",
            "poly": [
                1250,
                2887.5,
                1287.5,
                2887.5,
                1287.5,
                2927.5,
                1250,
                2927.5
            ],
            "ignore": false,
            "order": 8,
            "anno_id": 1,
            "text": "2",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        1250,
                        2887.5,
                        1287.5,
                        2887.5,
                        1287.5,
                        2927.5,
                        1250,
                        2927.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "section",
            "poly": [
                555,
                2242.5,
                1045,
                2242.5,
                1045,
                2300,
                555,
                2300
            ],
            "ignore": false,
            "order": 6,
            "anno_id": 1,
            "text": " # 2 Preliminaries",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        555,
                        2242.5,
                        1045,
                        2242.5,
                        1045,
                        2300,
                        555,
                        2300
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        }
    ],
    "extra": {
        "relation": []
    },
    "page_info": {
        "page_attribute": {},
        "page_no": 823,
        "height": 3300,
        "width": 2550,
        "image_path": "80_2_png.jpg"
    }
}