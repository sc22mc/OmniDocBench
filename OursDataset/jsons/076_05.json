{
    "layout_dets": [
        {
            "category_type": "figure",
            "poly": [
                227.5,
                215,
                2325,
                215,
                2325,
                525,
                227.5,
                525
            ],
            "ignore": false,
            "order": 1,
            "anno_id": 1,
            "text": "",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        227.5,
                        215,
                        2325,
                        215,
                        2325,
                        525,
                        227.5,
                        525
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "figure_caption",
            "poly": [
                195,
                580,
                2347.5,
                580,
                2347.5,
                622.5,
                195,
                622.5
            ],
            "ignore": false,
            "order": 2,
            "anno_id": 1,
            "text": " Fig. 5. Trained with 2k samples of each functional scenario (6k samples overall), VectorNet can predict the Ego's trajectory for all three functional scenarios.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        195,
                        580,
                        2347.5,
                        580,
                        2347.5,
                        622.5,
                        195,
                        622.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "figure",
            "poly": [
                232.5,
                675.0000000000001,
                2322.5,
                675.0000000000001,
                2322.5,
                995.0000000000001,
                232.5,
                995.0000000000001
            ],
            "ignore": false,
            "order": 3,
            "anno_id": 1,
            "text": "",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        232.5,
                        675.0000000000001,
                        2322.5,
                        675.0000000000001,
                        2322.5,
                        995.0000000000001,
                        232.5,
                        995.0000000000001
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "figure_caption",
            "poly": [
                207.5,
                1052.5,
                2350,
                1052.5,
                2350,
                1157.5,
                207.5,
                1157.5
            ],
            "ignore": false,
            "order": 4,
            "anno_id": 1,
            "text": " Fig. 6. Trained on 2k samples of the scenario ACC&LK, VectorNet learns that the Ego follows the Co, which enables predictions for the scenario ACC. However, the prediction for the scenario LK indicates that VectorNet primarily considers the Co's trajectory to predict the lateral behavior of the Ego, not the lanes. VectorNet does not know that the Ego's lateral behavior is determined by the lanes, and only the longitudinal behavior is determined by the Co.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        207.5,
                        1052.5,
                        2350,
                        1052.5,
                        2350,
                        1157.5,
                        207.5,
                        1157.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "figure",
            "poly": [
                232.5,
                1222.5,
                2315,
                1222.5,
                2315,
                1542.5,
                232.5,
                1542.5
            ],
            "ignore": false,
            "order": 5,
            "anno_id": 1,
            "text": "",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        232.5,
                        1222.5,
                        2315,
                        1222.5,
                        2315,
                        1542.5,
                        232.5,
                        1542.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "figure_caption",
            "poly": [
                202.5,
                1595,
                2352.5,
                1595,
                2352.5,
                1667.5,
                202.5,
                1667.5
            ],
            "ignore": false,
            "order": 6,
            "anno_id": 1,
            "text": " Fig. 7. Trained on the scenarios ACC and LK (2k samples each), generalization to ACC&LK is not achieved. Here, within the training data, the presence of the Co indicates a straight trajectory of the Ego; curved lanes indicate a constant velocity of the Ego. Accordingly, there is insufficient variance for generalization.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        202.5,
                        1595,
                        2352.5,
                        1595,
                        2352.5,
                        1667.5,
                        202.5,
                        1667.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                200,
                1762.5,
                1260,
                1762.5,
                1260,
                1995,
                200,
                1995
            ],
            "ignore": false,
            "order": 7,
            "anno_id": 1,
            "text": " since ACC is a special case of ACC&LK (a straight road). The generalization to LK, however, is poor. Row 4 shows that no generalization from ACC and LK to ACC&LK is achieved. Fig. 6 and Fig. 7 indicate that these results are due to insufficient variance in the training data.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        200,
                        1762.5,
                        1260,
                        1762.5,
                        1260,
                        1995,
                        200,
                        1995
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                202.5,
                2007.5,
                1252.5,
                2007.5,
                1252.5,
                2350,
                202.5,
                2350
            ],
            "ignore": false,
            "order": 8,
            "anno_id": 1,
            "text": " Row 9 shows that generalization from ACC and LK to ACC&LK is achieved if some data from the scenario ACC&LK are added. The resulting ADE is better than what is achieved with the same number of samples of ACC&LK on their own (see row 10). Hence, existing data can improve predictions for new functional scenarios or reduce the amount of data necessary to achieve a certain predictive performance.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        202.5,
                        2007.5,
                        1252.5,
                        2007.5,
                        1252.5,
                        2350,
                        202.5,
                        2350
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                205,
                2362.5,
                1255,
                2362.5,
                1255,
                2597.5,
                205,
                2597.5
            ],
            "ignore": false,
            "order": 9,
            "anno_id": 1,
            "text": " Originally, VectorNet uses 211k training and 41k validation samples [23, p. 5]. Our results show that with  $\\leq 2k$  samples, reasonable ADEs are achievable. We expect that adjusting the architecture or hyperparameters would allow working with even less data or increasing predictive performance.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        205,
                        2362.5,
                        1255,
                        2362.5,
                        1255,
                        2597.5,
                        205,
                        2597.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "section",
            "poly": [
                202.50000000000006,
                2632.5,
                1135,
                2632.5,
                1135,
                2682.5,
                202.50000000000006,
                2682.5
            ],
            "ignore": false,
            "order": 10,
            "anno_id": 1,
            "text": " ## B. Assessment Based on Predicted Evaluation Metrics",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        202.50000000000006,
                        2632.5,
                        1135,
                        2632.5,
                        1135,
                        2682.5,
                        202.50000000000006,
                        2682.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                197.5,
                2702.5,
                1252.5,
                2702.5,
                1252.5,
                2987.5,
                197.5,
                2987.5
            ],
            "ignore": false,
            "order": 11,
            "anno_id": 1,
            "text": " Next, we assess the prediction of evaluation metrics derived from VectorNet's predictions (see Fig. 1). The baselines are an extra-tree (ET) and a Bayesian neural network (BNN) with [17]'s hyperparameters. All models are trained with 2k samples. Table III shows that for different evaluation metrics, different models achieve the best mean average errors (MAEs).",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        197.5,
                        2702.5,
                        1252.5,
                        2702.5,
                        1252.5,
                        2987.5,
                        197.5,
                        2987.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "table_caption",
            "poly": [
                1305,
                2547.5,
                2335,
                2547.5,
                2335,
                2615,
                1305,
                2615
            ],
            "ignore": false,
            "order": 14,
            "anno_id": 1,
            "text": " TABLE III MEAN AVERAGE ERRORS (MAE) OF PREDICTED EVALUATION METRICS",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        1305,
                        2547.5,
                        2335,
                        2547.5,
                        2335,
                        2615,
                        1305,
                        2615
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "table",
            "poly": [
                1330,
                2665,
                2322.5,
                2665,
                2322.5,
                2955,
                1330,
                2955
            ],
            "ignore": false,
            "order": 15,
            "anno_id": 1,
            "text": "",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        1330,
                        2665,
                        2322.5,
                        2665,
                        2322.5,
                        2955,
                        1330,
                        2955
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": "",
                "table_layout": "",
                "language": ""
            },
            "html": "<table>\n<thead>\n<tr>\n<th>Scenario</th>\n<th>Evaluation Metric</th>\n<th>MAE ET</th>\n<th>MAE BNN</th>\n<th>MAE VectorNet</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ACC</td>\n<td>$a_{\\min}$</td>\n<td>0.13 $\\frac{m}{s^2}$</td>\n<td><b>0.07</b> $\\frac{m}{s^2}$</td>\n<td>0.58 $\\frac{m}{s^2}$</td>\n</tr>\n<tr>\n<td>ACC</td>\n<td>$d_{\\min}$</td>\n<td>0.87 m</td>\n<td>0.44 m</td>\n<td><b>0.26</b> m</td>\n</tr>\n<tr>\n<td>LK</td>\n<td>$p_{\\text{lat max}}$</td>\n<td>0.09 m</td>\n<td><b>0.08</b> m</td>\n<td>0.38 m</td>\n</tr>\n<tr>\n<td>ACC&amp;LK</td>\n<td>$a_{\\min}$</td>\n<td>0.19 $\\frac{m}{s^2}$</td>\n<td><b>0.09</b> $\\frac{m}{s^2}$</td>\n<td>0.74 $\\frac{m}{s^2}$</td>\n</tr>\n<tr>\n<td>ACC&amp;LK</td>\n<td>$d_{\\min}$</td>\n<td>1.14 m</td>\n<td>0.55 m</td>\n<td><b>0.43</b> m</td>\n</tr>\n<tr>\n<td>ACC&amp;LK</td>\n<td>$p_{\\text{lat max}}$</td>\n<td><b>0.08</b> m</td>\n<td><b>0.08</b> m</td>\n<td>0.21 m</td>\n</tr>\n</tbody>\n</table>",
            "latex": ""
        },
        {
            "category_type": "isolate_formula",
            "poly": [
                1332.5,
                2380,
                2330,
                2380,
                2330,
                2445,
                1332.5,
                2445
            ],
            "ignore": false,
            "order": 13,
            "anno_id": 1,
            "text": " <sup>1</sup>(2 lanes  $\\cdot$  24  $\\frac{\\text{vec.}}{\\text{lane}}$  + Co  $\\cdot$  25  $\\frac{\\text{vec.}}{\\text{Co}}$  + Ego  $\\cdot$  1  $\\frac{\\text{vec.}}{\\text{Ego}}$ )  $\\cdot$  7  $\\frac{\\text{FT}}{\\text{vec.}}$  = 518 FT",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        1332.5,
                        2380,
                        2330,
                        2380,
                        2330,
                        2445,
                        1332.5,
                        2445
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                1292.5,
                1760,
                2347.5,
                1760,
                2347.5,
                2352.5,
                1292.5,
                2352.5
            ],
            "ignore": false,
            "order": 12,
            "anno_id": 1,
            "text": " The regression models' high performance can be attributed to them learning directly on the relevant features (5 to 10 scenario inputs). However, they cannot account for the complex spatial and temporal nuances described in the scenario embeddings (although it would be possible to take these nuances into account, this would result in up to 150 features, which regression models can hardly process). VectorNet, on the other hand, can account for the nuances but must first identify the relevant features influencing the Ego's trajectory (for the ACC scenarios, the feature (FT) matrix has  $581 \\text{ entries}^1$ ). Hence, learning based on vectorized scenario embeddings is more flexible but also more challenging.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        1292.5,
                        1760,
                        2347.5,
                        1760,
                        2347.5,
                        2352.5,
                        1292.5,
                        2352.5
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        }
    ],
    "extra": {
        "relation": []
    },
    "page_info": {
        "page_attribute": {},
        "page_no": 766,
        "height": 3300,
        "width": 2550,
        "image_path": "76_5_png.jpg"
    }
}