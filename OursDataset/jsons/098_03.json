{
    "layout_dets": [
        {
            "category_type": "header",
            "poly": [
                446,
                110,
                1238,
                110,
                1238,
                148,
                446,
                148
            ],
            "ignore": false,
            "order": 1,
            "anno_id": 1,
            "text": "Published as a conference paper at ICLR 2024",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        446,
                        110,
                        1238,
                        110,
                        1238,
                        148,
                        446,
                        148
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "section",
            "poly": [
                450.00000000000017,
                344,
                1138,
                344,
                1138,
                388,
                450.00000000000017,
                388
            ],
            "ignore": false,
            "order": 2,
            "anno_id": 1,
            "text": "2 IN-CONTEXT AUTOENCODER",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        450.00000000000017,
                        344,
                        1138,
                        344,
                        1138,
                        388,
                        450.00000000000017,
                        388
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "section",
            "poly": [
                448,
                428.00000000000006,
                978,
                428.00000000000006,
                978,
                464.00000000000006,
                448,
                464.00000000000006
            ],
            "ignore": false,
            "order": 3,
            "anno_id": 1,
            "text": "2.1 MODEL ARCHITECTURE",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        448,
                        428.00000000000006,
                        978,
                        428.00000000000006,
                        978,
                        464.00000000000006,
                        448,
                        464.00000000000006
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "section",
            "poly": [
                448,
                2170,
                798,
                2170,
                798,
                2200,
                448,
                2200
            ],
            "ignore": false,
            "order": 9,
            "anno_id": 1,
            "text": "## 2.2 PRETRAINING",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        448,
                        2170,
                        798,
                        2170,
                        798,
                        2200,
                        448,
                        2200
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "section",
            "poly": [
                450,
                2238,
                880,
                2238,
                880,
                2270,
                450,
                2270
            ],
            "ignore": false,
            "order": 10,
            "anno_id": 1,
            "text": "### 2.2.1 AUTOENCODING",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        450,
                        2238,
                        880,
                        2238,
                        880,
                        2270,
                        450,
                        2270
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "section",
            "poly": [
                450,
                2676,
                974,
                2676,
                974,
                2714,
                450,
                2714
            ],
            "ignore": false,
            "order": 14,
            "anno_id": 1,
            "text": "### 2.2.2 TEXT CONTINUATION",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        450,
                        2676,
                        974,
                        2676,
                        974,
                        2714,
                        450,
                        2714
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                448,
                2754,
                2104,
                2754,
                2104,
                2972,
                448,
                2972
            ],
            "ignore": false,
            "order": 15,
            "anno_id": 1,
            "text": "While autoencoding pretraining offers a straightforward learning objective to encode a context, its inherent simplicity and exclusive focus on the single objective may lead to suboptimal generalization. To address this issue, we incorporate an additional objective during the pretraining phase: text continuation, as illustrated in Figure 7 in Appendix A. This self-supervised task is widely acknowledged to facilitate the learning of more generalizable representations in language models:",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        448,
                        2754,
                        2104,
                        2754,
                        2104,
                        2972,
                        448,
                        2972
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                441.9999999999998,
                2484,
                2112,
                2484,
                2112,
                2610,
                441.9999999999998,
                2610
            ],
            "ignore": false,
            "order": 13,
            "anno_id": 1,
            "text": "To indicate the autoencoding task, we append a special token \"[AE]\" to  $(\\widetilde{m_1}, \\ldots, \\widetilde{m_k})$  in the decoder, as Figure 3 shows. As this pretraining objective does not need any extra annotation, we can use massive text data to train the In-context Autoencoder.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        441.9999999999998,
                        2484,
                        2112,
                        2484,
                        2112,
                        2610,
                        441.9999999999998,
                        2610
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                444.0000000000001,
                2296,
                2102,
                2296,
                2102,
                2384,
                444.0000000000001,
                2384
            ],
            "ignore": false,
            "order": 11,
            "anno_id": 1,
            "text": "Like a typical autoencoder, one of the ICAE's pretraining objectives is to restore the original input text  $c$  of the length *L* from its produced memory slots  $(\\widetilde{m_1}, \\ldots, \\widetilde{m_k})$  of the length *k*:",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        444.0000000000001,
                        2296,
                        2102,
                        2296,
                        2102,
                        2384,
                        444.0000000000001,
                        2384
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                444,
                1976,
                2100,
                1976,
                2100,
                2098,
                444,
                2098
            ],
            "ignore": false,
            "order": 8,
            "anno_id": 1,
            "text": "As introduced above, we expect the memory slots  $(\\widetilde{m_1},\\ldots,\\widetilde{m_k})$  to be conditioned on by the target LLM on behalf of the original context  $c$ . Therefore, we use the untouched target LLM as the decoder of the ICAE to ensure the compatibility of memory slots within the target LLM.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        444,
                        1976,
                        2100,
                        1976,
                        2100,
                        2098,
                        444,
                        2098
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                449.99999999999966,
                1722,
                2104,
                1722,
                2104,
                1944,
                449.99999999999966,
                1944
            ],
            "ignore": false,
            "order": 7,
            "anno_id": 1,
            "text": "Given the intuition, we propose to use a LoRA-adapted LLM as the encoder of the ICAE, as illustrated in Figure 3. When encoding a context  $c = (w_1, \\ldots, w_L)$  with the length L, we first append  $k \\ (k \\ll L)$  memory tokens  $(m_1,\\ldots,m_k)$  to the context  $c$  to obtain their outputs  $(\\widetilde{m_1},\\ldots,\\widetilde{m_k})$  as the memory slots for the context  $c$ . Therefore, the ICAE encoder is very lightweight – it only adds a LoRA adapter and an embedding lookup for memory tokens compared with the target LLM.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        449.99999999999966,
                        1722,
                        2104,
                        1722,
                        2104,
                        1944,
                        449.99999999999966,
                        1944
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "figure_caption",
            "poly": [
                448,
                1420,
                2100,
                1420,
                2100,
                1690,
                448,
                1690
            ],
            "ignore": false,
            "order": 6,
            "anno_id": 1,
            "text": "Figure 3: The encoder of the ICAE is a LoRA-adapted LLM, which is used for encoding the original context  $c = (w_1, w_2, \\dots, w_L)$  into a few memory slots  $(\\widetilde{m_1}, \\dots, \\widetilde{m_k})$ . The decoder of the ICAE is the target LLM itself that can condition on the memory slots produced by the encoder for various purposes (e.g., the autoencoding task as in this figure).  $e(\\cdot)$  denotes the word embedding lookup in the target LLM and  $e_m(\\cdot)$  denotes the learnable embedding lookup of memory tokens that are used for producing memory slots. \"[AE]\" is a special token to indicate the autoencoding pretraining task.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        448,
                        1420,
                        2100,
                        1420,
                        2100,
                        1690,
                        448,
                        1690
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "figure",
            "poly": [
                576,
                662,
                1984,
                662,
                1984,
                1382,
                576,
                1382
            ],
            "ignore": false,
            "order": 5,
            "anno_id": 1,
            "text": "",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        576,
                        662,
                        1984,
                        662,
                        1984,
                        1382,
                        576,
                        1382
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "plain_text",
            "poly": [
                450,
                502,
                2096,
                502,
                2096,
                628,
                450,
                628
            ],
            "ignore": false,
            "order": 4,
            "anno_id": 1,
            "text": "Like a typical autoencoder (Kramer, 1991), ICAE consists of an encoder and a decoder. Similar to the design of Gisting (Mu et al., 2023) and AutoCompressor (Chevalier et al., 2023), the ICAE performs both the encoding and decoding processes in an in-context manner, as illustrated in Figure 3.",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        450,
                        502,
                        2096,
                        502,
                        2096,
                        628,
                        450,
                        628
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "isolate_formula",
            "poly": [
                552,
                2408,
                1998,
                2408,
                1998,
                2476,
                552,
                2476
            ],
            "ignore": false,
            "order": 12,
            "anno_id": 1,
            "text": "$$ \\mathcal{L}_{\\text{AE}} = \\max_{\\widetilde{m_1}, \\dots, \\widetilde{m_k}} P(\\boldsymbol{c} | \\widetilde{m_1}, \\dots, \\widetilde{m_k}; \\Theta_{\\text{LLM}}) = \\max_{\\Theta_{\\text{LoRA}}, e_m} P(\\boldsymbol{c} | m_1 \\dots m_k; \\Theta_{\\text{LLM}}, \\Theta_{\\text{LoRA}}, e_m) $$",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        552,
                        2408,
                        1998,
                        2408,
                        1998,
                        2476,
                        552,
                        2476
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "isolate_formula",
            "poly": [
                546,
                2990,
                2010,
                2990,
                2010,
                3054,
                546,
                3054
            ],
            "ignore": false,
            "order": 16,
            "anno_id": 1,
            "text": "$$ \\mathcal{L}_{\\text{LM}} = \\max_{\\widetilde{m_1}, \\dots, \\widetilde{m_k}} P(\\boldsymbol{o} | \\widetilde{m_1}, \\dots, \\widetilde{m_k}; \\Theta_{\\text{LLM}}) = \\max_{\\Theta_{\\text{LoRA}}, e_m} P(\\boldsymbol{o} | m_1 \\dots m_k; \\Theta_{\\text{LLM}}, \\Theta_{\\text{LoRA}}, e_m) $$",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        546,
                        2990,
                        2010,
                        2990,
                        2010,
                        3054,
                        546,
                        3054
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        },
        {
            "category_type": "isolate_formula",
            "poly": [
                1254,
                3130,
                1288,
                3130,
                1288,
                3172,
                1254,
                3172
            ],
            "ignore": false,
            "order": 17,
            "anno_id": 1,
            "text": "3",
            "line_with_spans": [
                {
                    "category_type": "text_span",
                    "poly": [
                        1254,
                        3130,
                        1288,
                        3130,
                        1288,
                        3172,
                        1254,
                        3172
                    ],
                    "text": ""
                }
            ],
            "attribute": {
                "text_language": "",
                "text_background": "",
                "text_rotate": ""
            }
        }
    ],
    "extra": {
        "relation": []
    },
    "page_info": {
        "page_attribute": {},
        "page_no": 1023,
        "height": 3300,
        "width": 2550,
        "image_path": "98_3_png.jpg"
    }
}