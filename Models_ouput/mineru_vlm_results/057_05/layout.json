{
    "pdf_info": [
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        214,
                        207,
                        2340,
                        650
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                214,
                                207,
                                2340,
                                650
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        214,
                                        207,
                                        2340,
                                        650
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                214,
                                                207,
                                                2340,
                                                650
                                            ],
                                            "type": "image",
                                            "image_path": "24101f8ac91d2f620910ad9ed1f826a3a1b5398abeca33f50706a8cf0ca82053.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                844,
                                669,
                                1700,
                                716
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        844,
                                        669,
                                        1700,
                                        716
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                844,
                                                669,
                                                1700,
                                                716
                                            ],
                                            "type": "text",
                                            "content": "Fig. 5: Approaches of Action Attribute Inference."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        379,
                        792,
                        1076,
                        1346
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                379,
                                792,
                                1076,
                                1346
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        379,
                                        792,
                                        1076,
                                        1346
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                379,
                                                792,
                                                1076,
                                                1346
                                            ],
                                            "type": "image",
                                            "image_path": "c89ff4c18c05545498ffb48b250c107725ec53ea58329a70ea85a91ccf9cd207.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 2,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                249,
                                1386,
                                1193,
                                1432
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        249,
                                        1386,
                                        1193,
                                        1432
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                249,
                                                1386,
                                                1193,
                                                1432
                                            ],
                                            "type": "text",
                                            "content": "Fig. 6: Subtitle and textual steps in the GUI recording."
                                        }
                                    ]
                                }
                            ],
                            "index": 3,
                            "type": "image_caption"
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        204,
                        1518,
                        1249,
                        1765
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                204,
                                1518,
                                1249,
                                1765
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        204,
                                        1518,
                                        1249,
                                        1765
                                    ],
                                    "type": "text",
                                    "content": "then applies a sequence and classification model to recognize the text. As the GUI text is similar to scene text [35], we directly use the pre- trained PP- OCRv2 without any fine- tuning on GUI text, that the overall performance reaches "
                                },
                                {
                                    "bbox": [
                                        204,
                                        1518,
                                        1249,
                                        1765
                                    ],
                                    "type": "inline_equation",
                                    "content": "84.3\\%"
                                },
                                {
                                    "bbox": [
                                        204,
                                        1518,
                                        1249,
                                        1765
                                    ],
                                    "type": "text",
                                    "content": " state- of- the- art accuracy."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        204,
                        1765,
                        1249,
                        2263
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                204,
                                1765,
                                1249,
                                2263
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        204,
                                        1765,
                                        1249,
                                        2263
                                    ],
                                    "type": "text",
                                    "content": "After deriving the text from the frames of keyboard opening and keyboard closing, we first remove all the text on the keyboard to keep the text concise. Then, we detect the text difference between the frames using SequenceMatcher [36]. Albeit good performance of PP- OCRv2, it may still make wrong text recognition, e.g., missing space. To address this, SequenceMatcher measures text similarity by computing the longest contiguous matching subsequence (LCS). Finally, we extract the text that appears only in the frame where the keyboard is closed, as input text."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        204,
                        2290,
                        828,
                        2336
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                204,
                                2290,
                                828,
                                2336
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        204,
                                        2290,
                                        828,
                                        2336
                                    ],
                                    "type": "text",
                                    "content": "D. Phase 3: Description Generation"
                                }
                            ]
                        }
                    ],
                    "index": 6,
                    "level": 1
                },
                {
                    "bbox": [
                        204,
                        2352,
                        1249,
                        2696
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                204,
                                2352,
                                1249,
                                2696
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        204,
                                        2352,
                                        1249,
                                        2696
                                    ],
                                    "type": "text",
                                    "content": "Once the attributes of the action are derived from the previous phases, we proceed by generating in- depth and easy- to- understand natural language descriptions. To accomplish this, we first leverage mature GUI understanding models to obtain GUI information non- intrusively. Then, we propose a novel algorithm to phrase actions into descriptions and embed them as subtitles in the recording as shown in Fig. [6]"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        204,
                        2699,
                        1249,
                        2999
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                204,
                                2699,
                                1249,
                                2999
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        204,
                                        2699,
                                        1249,
                                        2999
                                    ],
                                    "type": "text",
                                    "content": "1) GUI understanding: To understand the GUI, we adopt non-intrusive approaches to obtain GUI information, to avoid the complexity of app instrumentation or handling of the diverse software stack, especially for closed-source systems where no underlying instrumentation support is accessible [37]. An example of GUI understanding is shown in Fig. [7]"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        1297,
                        808,
                        2343,
                        1801
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                1297,
                                808,
                                2343,
                                1801
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        1297,
                                        808,
                                        2343,
                                        1801
                                    ],
                                    "type": "text",
                                    "content": "Specifically, we first implement the state- of- the- art object detection model Faster- RCNN with ResNet- 101 [29] and Feature Pyramid Networks [38] to detect 11 GUI element classes on the screen: button, checkbox, icon, imageview, textview, radio button, spinner, switch, toggle button, edittext, and chronometer. We train the model on the Rico dataset [39] contains 66k GUIs from "
                                },
                                {
                                    "bbox": [
                                        1297,
                                        808,
                                        2343,
                                        1801
                                    ],
                                    "type": "inline_equation",
                                    "content": "9.7\\mathrm{k}"
                                },
                                {
                                    "bbox": [
                                        1297,
                                        808,
                                        2343,
                                        1801
                                    ],
                                    "type": "text",
                                    "content": " apps. Following the previous work [40], we split the GUIs in the training:validation:testing dataset by apps in the ratio of 8:1:1. As a result, the model achieves an overall Mean Average Precision (MAP) of "
                                },
                                {
                                    "bbox": [
                                        1297,
                                        808,
                                        2343,
                                        1801
                                    ],
                                    "type": "inline_equation",
                                    "content": "51.45\\%"
                                },
                                {
                                    "bbox": [
                                        1297,
                                        808,
                                        2343,
                                        1801
                                    ],
                                    "type": "text",
                                    "content": " on the test set. For each GUI element, we adopt the OCR technique (the detailed implementation is elaborated in Section II- C3) to detect the text (if any). For the icon, annotation based on common human understanding can enhance the GUI understanding. For example, in Fig. [7] the icon of a group of people informs the semantic of \"Friend\". To achieve this, we adopt a transformer- based model from the existing work [11] to caption the icon image. We follow the implementation in their original paper to train the model and achieve "
                                },
                                {
                                    "bbox": [
                                        1297,
                                        808,
                                        2343,
                                        1801
                                    ],
                                    "type": "inline_equation",
                                    "content": "60.7\\%"
                                },
                                {
                                    "bbox": [
                                        1297,
                                        808,
                                        2343,
                                        1801
                                    ],
                                    "type": "text",
                                    "content": " accuracy on the test set."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        1297,
                        1854,
                        2343,
                        2993
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                1297,
                                1854,
                                2343,
                                2993
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        1297,
                                        1854,
                                        2343,
                                        2993
                                    ],
                                    "type": "text",
                                    "content": "Besides from understanding the information of GUI elements, we also attempt to obtain their global information relative to the GUI, including absolute positioning and element relationship. Absolute positioning describes the element as a spatial position in the GUI, which is particularly useful to represent an element in an image [41]. To accomplish this, we uniformly segment the GUI into "
                                },
                                {
                                    "bbox": [
                                        1297,
                                        1854,
                                        2343,
                                        2993
                                    ],
                                    "type": "inline_equation",
                                    "content": "3\\times 3"
                                },
                                {
                                    "bbox": [
                                        1297,
                                        1854,
                                        2343,
                                        2993
                                    ],
                                    "type": "text",
                                    "content": " grids, delineating horizontal position (i.e., left, right), vertical position (i.e., top, bottom), and center position. For example, in Fig. [7] the \"100m\" spinner is at the top right corner. GUI element relationship aims to transform the \"flat\" structure of GUI elements into connected relationships. A natural way of representing the relationship is using a graph structure, where elements are linked to the nearest elements. To accomplish this, we first compute the horizontal and vertical distance between GUI elements by euclidean pixel measurement. And then, we construct the graph of the GUI elements by finding the nearest elements (neighbors) in four directions, including left, right, top, and bottom. Note that we set up a threshold to prevent the neighbors from being too far apart. Ultimately, it will generate a graph representing the relationships between the elements in the GUI. For example, in Fig. [7] the \"100\" spinner has two neighbors: the \"Advanced\" element at the top,"
                                }
                            ]
                        }
                    ],
                    "index": 10
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                2550,
                3300
            ],
            "page_idx": 0
        }
    ],
    "_backend": "vlm",
    "_version_name": "2.1.9"
}