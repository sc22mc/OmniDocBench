{
    "pdf_info": [
        {
            "para_blocks": [
                {
                    "bbox": [
                        239,
                        303,
                        1226,
                        501
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                303,
                                1226,
                                501
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        303,
                                        1226,
                                        501
                                    ],
                                    "type": "text",
                                    "content": "sult in residual issues. To address these, we use CDM's rendering techniques [41] to identify unrenderable elements. These elements are then reviewed and corrected by three researchers to ensure accuracy in the final annotations."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        242,
                        544,
                        657,
                        594
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                242,
                                544,
                                657,
                                594
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        242,
                                        544,
                                        657,
                                        594
                                    ],
                                    "type": "text",
                                    "content": "3.3. Dataset Statistics"
                                }
                            ]
                        }
                    ],
                    "index": 1,
                    "level": 1
                },
                {
                    "bbox": [
                        239,
                        620,
                        1226,
                        867
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                620,
                                1226,
                                867
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        620,
                                        1226,
                                        867
                                    ],
                                    "type": "text",
                                    "content": "Page Diversity. OmniDocBench comprises a total of 981 PDF pages across 9 distinct types. Each page is annotated with global attributes, including text language, column layout type, and indicators for blurred scans, watermarks, and colored backgrounds."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        239,
                        871,
                        1226,
                        1415
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                871,
                                1226,
                                1415
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        871,
                                        1226,
                                        1415
                                    ],
                                    "type": "text",
                                    "content": "Annotation Diversity: OmniDocBench contains over 100,000 annotations for page detection and recognition: (1) More than 20,000 block- level annotations across 15 categories, including over 15,979 text paragraphs, 989 image boxes, 428 table boxes, and so on. All document components except headers, footers, and page notes are labeled with reading order information, totaling over 16,000 annotations. (2) The dataset also includes more than 70,000 span- level annotations across 4 categories, with 4,009 inline formulas and 357 footnote markers represented in LaTeX format, while the remaining annotations are in text format."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        239,
                        1422,
                        1226,
                        1818
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                1422,
                                1226,
                                1818
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        1422,
                                        1226,
                                        1818
                                    ],
                                    "type": "text",
                                    "content": "Annotation Attribute Diversity: (1) Text Attributes: All block- level annotations, except for tables and images, include text attribute tags. In addition to standard Chinese and English text, there are over 2,000 blocks with complex backgrounds and 493 with rotated text. (2) Table Attributes: In addition to standard Chinese and English tables, there are 142 tables with complex backgrounds, 81 containing formulas, 150 with merged cells, and 7 vertical tables."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        239,
                        1871,
                        1170,
                        1927
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                1871,
                                1170,
                                1927
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        1871,
                                        1170,
                                        1927
                                    ],
                                    "type": "text",
                                    "content": "4. OmniDocBench Evaluation Methodology"
                                }
                            ]
                        }
                    ],
                    "index": 5,
                    "level": 1
                },
                {
                    "bbox": [
                        239,
                        1956,
                        1226,
                        2306
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                1956,
                                1226,
                                2306
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        1956,
                                        1226,
                                        2306
                                    ],
                                    "type": "text",
                                    "content": "To provide a fair and comprehensive evaluation for various models, we proposed an end- to- end evaluation pipeline consisting of several modules, including extraction, matching algorithm, and metric calculation, as shown in Figure 4. It ensures that OmniDocBench automatically performs unified evaluation on document parsing, thereby producing reliable and effective evaluation results."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        239,
                        2349,
                        525,
                        2395
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                2349,
                                525,
                                2395
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        2349,
                                        525,
                                        2395
                                    ],
                                    "type": "text",
                                    "content": "4.1. Extraction"
                                }
                            ]
                        }
                    ],
                    "index": 7,
                    "level": 1
                },
                {
                    "bbox": [
                        239,
                        2425,
                        1226,
                        2620
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                2425,
                                1226,
                                2620
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        2425,
                                        1226,
                                        2620
                                    ],
                                    "type": "text",
                                    "content": "Preprocessing. The model- generated markdown text should be preprocessed, which includes removing images, eliminating markdown tags at the beginning of the document, and standardizing the number of repeated characters."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        239,
                        2623,
                        1226,
                        2970
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                239,
                                2623,
                                1226,
                                2970
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        239,
                                        2623,
                                        1226,
                                        2970
                                    ],
                                    "type": "text",
                                    "content": "Elements Extraction. Extraction is primarily carried out using regular expression matching. To ensure that the extraction of elements does not interfere with each other, it is necessary to follow a specific order. The extraction sequence is as follows: LaTeX tables, HTML tables, display formulas, markdown tables (which are then converted into HTML format), and code blocks."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "type": "image",
                    "bbox": [
                        1318,
                        290,
                        2307,
                        914
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                1318,
                                290,
                                2307,
                                914
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        1318,
                                        290,
                                        2307,
                                        914
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                1318,
                                                290,
                                                2307,
                                                914
                                            ],
                                            "type": "image",
                                            "image_path": "de96439b629ab899698afedeb578941c9441b8cc239d9cf834b3906ebb706c1d.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 10,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                1461,
                                953,
                                2164,
                                996
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        1461,
                                        953,
                                        2164,
                                        996
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                1461,
                                                953,
                                                2164,
                                                996
                                            ],
                                            "type": "text",
                                            "content": "Figure 4. OmniDocBench Evaluation Pipeline."
                                        }
                                    ]
                                }
                            ],
                            "index": 11,
                            "type": "image_caption"
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        1315,
                        1032,
                        2305,
                        1432
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                1315,
                                1032,
                                2305,
                                1432
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        1315,
                                        1032,
                                        2305,
                                        1432
                                    ],
                                    "type": "text",
                                    "content": "Pure Text Extraction. After extracting special components, the remaining content is considered pure text. Paragraphs are separated by double line breaks, allowing them to participate in subsequent matching processes, thus aligning with reading order annotation units in the GTs. If no double line break exists, single line breaks are used for paragraph separation. Additionally, previously extracted code blocks are merged into the text category for processing."
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        1315,
                        1435,
                        2307,
                        1881
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                1315,
                                1435,
                                2307,
                                1881
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        1315,
                                        1435,
                                        2307,
                                        1881
                                    ],
                                    "type": "text",
                                    "content": "Inline Formula Format Converting. We standardized inline formulas within paragraphs to Unicode format. This was necessary because different models produce inconsistent outputs for inline formulas. For formulas originally written in Unicode, it is hard to extract them using regular expressions. Therefore, to ensure a fair comparison, we do not extract inline formulas for separate evaluation. Instead, we include them in their Unicode format alongside the text paragraphs for evaluation."
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        1315,
                        1887,
                        2305,
                        2079
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                1315,
                                1887,
                                2305,
                                2079
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        1315,
                                        1887,
                                        2305,
                                        2079
                                    ],
                                    "type": "text",
                                    "content": "Reading Order Extraction. Upon completion of the extraction, the start and end positions of the extracted content in the original markdown are recorded for subsequent reading order calculation."
                                }
                            ]
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        1318,
                        2125,
                        1802,
                        2174
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                1318,
                                2125,
                                1802,
                                2174
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        1318,
                                        2125,
                                        1802,
                                        2174
                                    ],
                                    "type": "text",
                                    "content": "4.2. Matching Algorithm"
                                }
                            ]
                        }
                    ],
                    "index": 15,
                    "level": 1
                },
                {
                    "bbox": [
                        1315,
                        2201,
                        2305,
                        2890
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                1315,
                                2201,
                                2305,
                                2890
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        1315,
                                        2201,
                                        2305,
                                        2890
                                    ],
                                    "type": "text",
                                    "content": "Adjacency Search Match. To avoid the impact of paragraph splitting on the final results, we proposed Adjacency Search Match, that merges and splits paragraphs in both GTs and Preds to achieve the best possible match. The specific strategy involves: i) Calculate a metrix of Normalized Edit Distance between GTs and Preds. The Pred and GT pairs whose similarity exceeds a specific threshold are considered as successful match. ii) For the rest, we apply fuzzy matching to determine whether one string is a subset of another string. If so, we further apply the merging algorithm which would try to merge adjacent paragraph. This process would continue to merge more paragraph until the Normalized Edit Distance starts to decrease. After this process, the best match will be found for GTs and Preds."
                                }
                            ]
                        }
                    ],
                    "index": 16
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                2550,
                3300
            ],
            "page_idx": 0
        }
    ],
    "_backend": "vlm",
    "_version_name": "2.1.9"
}