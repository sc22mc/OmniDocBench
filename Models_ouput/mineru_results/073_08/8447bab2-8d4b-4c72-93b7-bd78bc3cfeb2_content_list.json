[
    {
        "type": "text",
        "text": "approximated by $\\dot { \\pmb x } \\simeq \\dot { \\pmb x } ^ { ( 1 ) } + \\dot { \\pmb x } ^ { ( 2 ) }$ and $\\dot { \\pmb y } \\simeq \\dot { \\pmb y } ^ { ( 1 ) } + \\dot { \\pmb y } ^ { ( 2 ) }$ ",
        "page_idx": 0
    },
    {
        "type": "equation",
        "img_path": "images/4f197fef235f480aedce558318b6ae8c01fccbc37cc169a7601faf7ed0c20dcd.jpg",
        "text": "$$\n\\begin{array} { r l } & { \\dot { x } ^ { ( 1 ) } = + x ^ { * } ( 1 - x ^ { * } ) ( u \\cdot 1 _ { z } ) p ^ { * } \\circ \\epsilon , } \\\\ & { \\dot { y } ^ { ( 1 ) } = - y ^ { * } ( 1 - y ^ { * } ) ( u \\cdot 1 _ { z } ) p ^ { * } \\circ \\delta , } \\\\ & { \\dot { x } ^ { ( 2 ) } = - ( x ^ { * } - \\tilde { x } ^ { * } ) ( u \\cdot 1 _ { z } ) \\delta \\circ \\epsilon \\circ p ^ { * } } \\\\ & { \\qquad + x ^ { * } \\tilde { x } ^ { * } ( u \\cdot 1 _ { z } ) \\{ ( \\delta \\cdot p ^ { * } ) \\epsilon \\circ y ^ { * } \\circ 1 _ { \\mathbb { X } } } \\\\ & { \\qquad + ( \\epsilon \\cdot p ^ { * } ) \\epsilon \\circ x ^ { * } \\circ 1 _ { y } + ( \\delta \\circ \\epsilon \\circ y ^ { * } \\cdot 1 _ { \\mathbb { X } } ) p ^ { * } \\} , } \\\\ & { \\dot { y } ^ { ( 2 ) } = + ( y ^ { * } - \\tilde { y } ^ { * } ) ( u \\cdot 1 _ { z } ) \\delta \\circ \\epsilon \\circ p ^ { * } } \\\\ & { \\qquad - y ^ { * } \\tilde { y } ^ { * } ( u \\cdot 1 _ { z } ) \\{ ( \\delta \\cdot p ^ { * } ) \\delta \\circ y ^ { * } \\circ 1 _ { \\mathbb { X } } } \\\\ & { \\qquad + ( \\epsilon \\cdot p ^ { * } ) \\delta \\circ x ^ { * } \\circ 1 _ { y } + ( \\delta \\circ \\epsilon \\circ x ^ { * } \\cdot 1 _ { y } ) p ^ { * } \\} , } \\end{array}\n$$",
        "text_format": "latex",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "with $\\boldsymbol { x } ^ { * } : = ( x ^ { * } , x ^ { * } , \\tilde { x } ^ { * } , \\tilde { x } ^ { * } )$ ， $\\boldsymbol { y } ^ { * } : = ( y ^ { * } , \\tilde { y } ^ { * } , y ^ { * } , \\tilde { y } ^ { * } )$ ， $\\pmb { p } ^ { * } : = \\pmb { x } ^ { * } \\circ \\pmb { y } ^ { * }$ ， $\\mathbf { 1 } _ { \\times } : = ( + 1 , + 1 , - 1 , - 1 )$ ， $\\mathbf { 1 } _ { \\mathsf { y } } : = ( + 1 , - 1 , + 1 , - 1 )$ and $\\mathbf { 1 } _ { z } : = \\mathbf { 1 } _ { \\times } \\circ \\mathbf { 1 } _ { \\mathsf { y } }$ .Eqs.(12)-(15） are derived by considering small changes in the stationary condition $p ^ { \\mathrm { s t } } = M p ^ { \\mathrm { s t } }$ for deviations of $\\delta$ and $\\epsilon$ (see Appendix B.1 and B.2 for the detailed calculation). By this, we canavoid adirect calculation of $\\pmb { p } ^ { \\mathrm { s t } }$ ,whichishardtobeobtained. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "5Experimental Findings ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "5.1Simulation and Low-Order Approximation ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "From theobtaineddynamics,i.e.,Eqs.(12)-(15),weinterpret the learningdynamicsindetail.Inthefirstorder dynamics,multi-memory learning is no more than a simple extension of the zero-memoryone.Indeed, the zero-memory learning drawsan elliptical orbit given by Hamiltonian as the conserved quantity [30,14]. Eqs.(12)and (13) mean that the multi-memory dynamics also draw similar eliptical orbits for each pair of $x _ { i }$ and $y _ { i }$ . In other words,the dynamics are given by a linear fow ona four-dimensional torus.Because no interaction occursbetween the pair of $i$ and $i ^ { \\prime }$ such that $i \\neq i ^ { \\prime }$ ，the dynamics_of the multi-memory learning for each stateare qualitatively the sameas learning without memories.Fig.2 shows the time seriesof the multi-memory learning dynamics near the Nash equilibrium inan exampleof a two-action zero-sum game, the penny-matching game( $u _ { 1 } = u _ { 4 } = 1$ ， $u _ { 2 } = u _ { 3 } = - 1$ ).Theexperimentaltrajectoriesare generated by the Runge-Kutta fourth-order method ofEq.(10) (see Appendix B.3 for details)，while the approximated trajectories areby the Runge-Kutta fourth-order method for the frst-(Eqs.(12)and (13), the second-(Eqs.(14) and (15)),and the third-order approximations (in Appendix B.2).The step-size is $1 0 ^ { - 2 }$ in common. The top-left panel in the figure shows that the dynamics roughly draw a circular orbit foreach stateand are wellapproximated bythe frst-order dynamics of Eqs.(12)and (13).However,the top-right panel,whereasufficientlylong time has passed,shows thatthedynamicsdeviatefromthecircular orbits. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Such deviation from the circular orbits is given by higher-order dynamics than Eqs.(12) and (13). In the second-orderdynamics given by Eqs.(14)and (15),the multi-memory learning is qualitativelydifferent from the zero-memory one.Indeed,Eqs.(14) and (15) obviously mean that interactions occur between thepair of $i$ and $i ^ { \\prime }$ such that $i \\neq i ^ { \\prime }$ .Thereby， the dynamics of multi-memory learning become much more complex than that of zero-memory learning.In practice,no Hamiltonian function,denoted by $H ^ { ( 2 ) }$ ， exists in the second-order dynamics,as diferent from the first-order one. One can check this by calculating $\\partial \\dot { x } _ { i } ^ { ( 2 ) } / \\partial \\epsilon _ { i ^ { \\prime } } + \\partial \\dot { y } _ { i ^ { \\prime } } ^ { ( 2 ) } / \\partial \\delta _ { i } \\neq 0$ for $i$ and $i ^ { \\prime } \\neq i$ ,ifassmingtatHmiltoansholdsatisfy $\\dot { x } ^ { ( 2 ) } = + \\partial H ^ { ( 2 ) } / \\partial \\epsilon$ and $\\dot { \\pmb y } ^ { ( 2 ) } = - \\partial H ^ { ( 2 ) } / \\partial \\delta$ . Thus,the multi-memory dynamics might not have any conserved quantities and not drawany closed trajectory.Indeed,the right panels inFig.2show that thedynamics tend to diverge from the Nash equilibrium. This divergence from the Nash equilibrium is surprising because zero-memory learning in zero-sum games always has a closed trajectory and keeps the Kulback-Leibler divergence from the Nash equilibrium constant [31,14].Here,note that we need the third-order dynamics to ft the experimental dynamics wellas seenbycomparing the middle-right and lower-right panels inFig.2.The error between ",
        "page_idx": 0
    }
]