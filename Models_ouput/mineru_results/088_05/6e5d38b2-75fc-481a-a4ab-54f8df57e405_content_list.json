[
    {
        "type": "table",
        "img_path": "images/de94832cae4ca5b48a32c114cfd6575cb860943ab407f19249a3fa5291933dd0.jpg",
        "table_caption": [
            "TABLEIII CATEGORIZATION OF ROBOT SOFTWARE ARCHITECTURE BASED ON COMMUNICATION PROTOCOL "
        ],
        "table_footnote": [],
        "table_body": "<table><tr><td>Communication paradigm</td><td>Description</td><td>Examples</td><td>Features</td><td>Application examples</td></tr><tr><td>Client-server</td><td>In this paradigm,one component (theclient） requests services or data from another component (the server).It is a one-to-one commu- nication model.</td><td>Robot operating systems (ROS)，remote desktop protocol,file transfer protocol,simple mail transfer protocol.</td><td>Centralized control and data sharing,suitable for applications with asingle point of control.</td><td>Remote roboticcontrol over a network,teleoper- ation systems.</td></tr><tr><td>Publisher- subscriber (Pub-Sub) ([13])</td><td>Thisparadigmusesapublish- subscribe model where one or more publishers send messages or data to one or more subscribers.It is a one- to-many communication model.</td><td>ROS,MQTT，advanced message queuing protocol, Apache Kafka.</td><td>Decoupled communica- tion,scalable and efficient forbroadcastingdata, supports real-time updates.</td><td>Robot sensor data distribution,event-driven robotics systems.</td></tr><tr><td>Peer-to-peer （P2P)（[14]</td><td>In a peer-to-peer network,all com- ponents are equal and can com- municate directly with each other. Thereisno centralizedserver.</td><td>BitTorrent，Skype，Bit- coin.</td><td>Distributed control and decision-making，robust and fault-tolerant,suitable for decentralized systems.</td><td>Multirobot coordination and collaboration,swarm robotics.</td></tr><tr><td>Master-slave （[15]）</td><td>Thisparadigm involves a single master or coordinator component (the master) that controls and com- municates with multiple subordi- nate components (the slaves).</td><td>SETI</td><td>Hierarchical control, efficient resource allocation,well-suited for coordinated tasks.</td><td>Multi-robot assembly lines,collaborativerobots (cobots).</td></tr><tr><td>Broadcast ([16])</td><td>Inabroadcast communication model,a message or data is trans- mitted toall componentsin the network.It is a one-to-all commu- nication model.</td><td>UML-RT,address resolution protocol.</td><td>Simplicityandefficiency in data distribution,use- ful for broadcasting com- mands or status updates.</td><td>Broadcasting control commandstomultiple robots， notification systems in robot fleets.</td></tr><tr><td>Event-driven （[17]）</td><td>This paradigm focuses on reacting to events or triggers.Components subscribe to specific events and re- spond when those events occur. Multicast communication allows a</td><td>ApacheKafka，AWS Lambda,Apache Storm.</td><td>Responsive and event- triggered behavior, supports asynchronous communication.</td><td>Robot behaviors triggered byenvironmental events, reactive control systems. Coordinated behaviorin</td></tr><tr><td>Multicast ([18])</td><td>message or data to be sent to a selected group of components,of- tenspecified by an IP multicast address.</td><td>multiparty conferencing.</td><td>Efficient data distribution to specific groups,reduces network load compared to broadcasting.</td><td>subgroups of arobot team, networked robot simula- tions.</td></tr><tr><td>Point-to-point （[19])</td><td>Data is exchanged directly between two specific components or robots.</td><td>LAN cable, stovepipes.</td><td>Direct communication, simplicity. Simplerequest handling,</td><td>Information exchange be- tween farm vehicles and sensors. Remotemonitoringand</td></tr><tr><td>Request- response ([20])</td><td>One component sends a request, and another component responds with the requested information or action.</td><td>Sendinga spreadsheet to theprinter.</td><td>suitable for remote control.</td><td>control of irrigation sys- tems.</td></tr><tr><td>Message queues （[21])</td><td>Messages are sent to a queue, and other components can retrieve them,providingasynchronous and decoupled communication.</td><td>Apache Kafka， RabbitMQ,and LavinMQ.</td><td>Taskscheduling, event handling.</td><td>Taskmanagementand coordination in precision agriculture.</td></tr></table>",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "layers,allowing the robot to perform complex behaviors in a modularfashion. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "5）Centralized Architecture Versus Distributed Architecture: Centralized architecture organizes the robotic system around a central processing unit,while distributed architecture allows multiple processing units to work together to achieve a common goal.Example,client-server architecture (centralized architecture） is a centralized architecture where a single server provides resources or services to multiple clients. Clients request resources or services from the server,which then respondswith the requested information. This architecture is often used in web applications or database systems; peer-to-peer architecture (distributed architecture)is adistributed architecture[12] where multiple nodes communicate directly with each other without the need fora central server.Each node can act asboth a client andaserver,makingitmore fault-tolerantand scalable than a centralized architecture.This architecture is often used in file-sharing or messaging systems. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "B. Categorization Based on Communication Strategies ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Robotic software architectural paradigms can be categorized based on communication protocols that facilitate interactions between different components of a robotic system. Table III, categorizes some common robotic software paradigms based on communication protocols,accompanied by their descriptions, features,and examples ofapplications. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "These communication paradigms play a crucial role in enhancing agricultural processes, from precision farming and crop monitoring to pest control and automation of various tasks. The choice of communication paradigm depends on the specific needs and challenges of agricultural robotics applications. ",
        "page_idx": 0
    }
]